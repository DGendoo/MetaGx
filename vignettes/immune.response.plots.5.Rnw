% This is a template knitr file that generates a pdf report for the prognostic
% value of a gene set on ovarian cancer subtypes.
% This file should be run in a loop from a driver R file, in which the following
% variables have been defined: gmt.contents, geneset.name, pooled.eset
%

%\VignetteEngine{knitr::knitr}
\documentclass{article}

\usepackage{graphicx}
\usepackage{microtype}
\usepackage[T1]{fontenc}
\usepackage{float}
\usepackage[latin1]{inputenc}
\usepackage{geometry}
\usepackage{titlesec}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\usepackage[table]{xcolor}
%\newcommand{\sectionbreak}{\clearpage}

\begin{document}

\title{Gene Ontology Gene Set: \texttt{\Sexpr{gsub("_", " ", geneset.name)}}}

\author{Gregory M. Chen}
\date{\today}
\maketitle

<<setup_1, include=FALSE, cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
#knitr::opts_chunk$set(include=TRUE, results="hide", fig.width=8, fig.height=8, fig.path=paste0('figures-', counter, '/'), fig.align='center', fig.show='hold',warning=FALSE, echo=FALSE, message=FALSE, cache=FALSE)
@

<<read_gmt, include=FALSE, cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
index <- which(gmt.contents$geneset.names == geneset.name)
entrez.ids <- unlist(gmt.contents$genesets[index])

intersecting.entrez.ids <- intersect(fData(pooled.eset)$EntrezGene.ID, entrez.ids)

current.survival.df <- get.survival.data.for.plotting(pooled.eset, entrez.ids=intersecting.entrez.ids, num.quantiles=3, survival.type="overall.survival", time.unit="years", gene.name.as.output.colname=FALSE, additional.colnames.to.keep = c("Helland.subtypes", "Verhaak.subtypes", "Bentink.Haibe.Kains.subtypes"))

current.survival.df <- current.survival.df[,!grepl(".quantile", colnames(current.survival.df))]


expression.df <- t(current.survival.df[,grepl(".expression", colnames(current.survival.df))])
pc1.vals <- prcomp(expression.df)$rotation[,1]

num.quantiles <- 3
pc1.quantiles <- cut(pc1.vals, breaks=quantile(pc1.vals, probs=seq(0,1,length=num.quantiles+1)), include.lowest=TRUE)

if(num.quantiles==2) {
  levels(pc1.quantiles) <- c("Low", "High")
} else if(num.quantiles==3) {
  levels(pc1.quantiles) <- c("Low", "Mid", "High")
} else {
  levels(pc1.quantiles) <- paste0("PC1.quantile.", 1:num.quantiles)
}

current.survival.df$pc1.val <- pc1.vals
current.survival.df$pc1.quantile <- pc1.quantiles
@

\noindent We considered the \Sexpr{length(intersecting.entrez.ids)} genes that were present in all datasets (out of \Sexpr{length(entrez.ids)} in \texttt{\Sexpr{gsub("_", " ", geneset.name)}}). We merged  performed principal components analysis on the genes, and used the value of the first principal component as the risk score. PCA and tertile stratification were performed on the pooled dataset, with gene expression values quantile normalized.

<<GO_gene_pca_dataset_table, results='asis', cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
print(.get.ordered.data.table(current.survival.df$data.source), include.rownames=FALSE)
@


<<GO_gene_pca_survival_all, fig.width=5, fig.height=5, out.width="0.6\\textwidth", cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
surv.time <- current.survival.df$years_to_event
surv.event <- current.survival.df$event_status
groups <- current.survival.df$pc1.quantile
risk.vals <- -current.survival.df$pc1.val
group.names <- paste("PC1", levels(current.survival.df[,"pc1.quantile"]))
datasets <- current.survival.df$data.source
main.title <- paste("Survival: Immune genes, PC1")

stat.objects.survplot <- create.survival.plot(
  surv.time = surv.time,
  surv.event = surv.event,
  groups <- groups,
  risk.vals = risk.vals,
  group.names = group.names,
  datasets = datasets,
  xlab = "Time (years)",
  main = main.title,
  time.cens=10,
  stats.to.show = c("n", "p", "d")
)
@
\pagebreak
\noindent Survival by the Tothill subtypes (using our implementation of their subtype classifer described in Helland et al.)
<<genes_pca_survival_Helland_subtypes, cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
par(mfrow=c(2,2))
for(current.helland.subtype in levels(current.survival.df$Helland.subtypes)) {
  cases.to.include <- current.survival.df$Helland.subtypes == current.helland.subtype
  surv.time <- current.survival.df$years_to_event[cases.to.include]
  surv.event <- current.survival.df$event_status[cases.to.include]
  groups <- current.survival.df$pc1.quantile[cases.to.include]
  risk.vals <- -current.survival.df$pc1.val[cases.to.include]
  group.names <- paste("PC1", levels(current.survival.df[,"pc1.quantile"][cases.to.include]))
  datasets <- current.survival.df$data.source[cases.to.include]
  main.title <- paste("Survival: Immune genes, PC1", "in subtype", current.helland.subtype)
  
  create.survival.plot(
    surv.time = surv.time,
    surv.event = surv.event,
    groups <- groups,
    risk.vals = risk.vals,
    group.names = group.names,
    datasets = datasets,
    xlab = "Time (years)",
    main = main.title,
    time.cens=10,
    stats.to.show = c("n", "p", "d")
  )
}
@

\pagebreak
\noindent Survival by the TCGA subtypes (using our implementation of their subtype classifer described in Verhaak et al.)
<<genes_pca_survival_Verhaak_subtypes, cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
par(mfrow=c(2,2))
for(current.verhaak.subtype in levels(current.survival.df$Verhaak.subtypes)) {
  cases.to.include <- current.survival.df$Verhaak.subtypes == current.verhaak.subtype
  surv.time <- current.survival.df$years_to_event[cases.to.include]
  surv.event <- current.survival.df$event_status[cases.to.include]
  groups <- current.survival.df$pc1.quantile[cases.to.include]
  risk.vals <- -current.survival.df$pc1.val[cases.to.include]
  group.names <- paste("PC1", levels(current.survival.df[,"pc1.quantile"][cases.to.include]))
  datasets <- current.survival.df$data.source[cases.to.include]
  main.title <- paste("Survival: Immune genes, PC1", "in subtype", current.verhaak.subtype)
  
  create.survival.plot(
    surv.time = surv.time,
    surv.event = surv.event,
    groups <- groups,
    risk.vals = risk.vals,
    group.names = group.names,
    datasets = datasets,
    xlab = "Time (years)",
    main = main.title,
    time.cens=10,
    stats.to.show = c("n", "p", "d")
  )
}
@

\pagebreak
\noindent Survival by the Bentink subtypes (using our implementation of their subtype classifer in \texttt{genefu})
<<genes_pca_survival_Bentink_subtypes, fig.width=10, fig.height=5.5, cache=FALSE, fig.path=paste0('figures-', counter, '/')>>=
par(mfrow=c(1,2))
for(current.bentink.subtype in levels(current.survival.df$Bentink.Haibe.Kains.subtypes)) {
  cases.to.include <- current.survival.df$Bentink.Haibe.Kains.subtypes == current.bentink.subtype
  surv.time <- current.survival.df$years_to_event[cases.to.include]
  surv.event <- current.survival.df$event_status[cases.to.include]
  groups <- current.survival.df$pc1.quantile[cases.to.include]
  risk.vals <- -current.survival.df$pc1.val[cases.to.include]
  group.names <- paste("PC1", levels(current.survival.df[,"pc1.quantile"][cases.to.include]))
  datasets <- current.survival.df$data.source[cases.to.include]
  main.title <- paste("Survival: Immune genes, PC1", "in subtype\n", current.bentink.subtype)
  
  create.survival.plot(
    surv.time = surv.time,
    surv.event = surv.event,
    groups <- groups,
    risk.vals = risk.vals,
    group.names = group.names,
    datasets = datasets,
    xlab = "Time (years)",
    main = main.title,
    time.cens=10,
    stats.to.show = c("n", "p", "d")
  )
}
@

\end{document}
